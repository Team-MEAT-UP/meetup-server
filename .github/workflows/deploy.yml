name: Deploy

on:
  push:
    branches: [ "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.GH_TOKEN }}

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle
        uses: actions/cache@v4.2.3
        with:
          path: ~/.gradle/caches
          key: gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: gradle-

      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: move jar file to deploy
        run: mv ./build/libs/*.jar ./deploy

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v3.10.0

      - name: Login to NCP Container Registry
        uses: docker/login-action@v3.4.0
        with:
          registry: ${{ secrets.NCP_CONTAINER_REGISTRY }}
          username: ${{ secrets.NCP_ACCESS_KEY }}
          password: ${{ secrets.NCP_SECRET_KEY }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v6.15.0
        with:
          context: ./deploy
          platforms: linux/amd64
          push: true
          tags: |
            ${{ secrets.NCP_CONTAINER_REGISTRY }}/spot-backend:${{ github.sha }}
          build-args: |
            "DB_URL=${{ secrets.DB_URL }}"
            "DB_USERNAME=${{ secrets.DB_USERNAME }}"
            "DB_PASSWORD=${{ secrets.DB_PASSWORD }}"

  deploy:
    needs: build
    name: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to NCP Server and Run
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.NCP_HOST }}
          username: ${{ secrets.NCP_USERNAME }}
          password: ${{ secrets.NCP_PASSWORD }}
          port: ${{ secrets.NCP_PORT }}
          script: |
            sudo docker pull ${{ secrets.NCP_CONTAINER_REGISTRY }}/spot-backend:${{ github.sha }}
            sudo docker ps -q -f "name=spot-backend" | xargs sudo docker stop | xargs sudo docker rm
            sudo docker run -d -p 8080:8080 --name spot-backend ${{ secrets.NCP_CONTAINER_REGISTRY }}/spot-backend:${{ github.sha }}
